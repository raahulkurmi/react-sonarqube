name: CI - Test and SonarQube

on:
  pull_request:
    branches:
      - main

jobs:
  test-and-sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: |
          npm test -- --coverage --watchAll=false

      - name: Run SonarQube scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.projectKey=myreactproject \
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }}

      - name: Wait for SonarQube Quality Gate
        run: sleep 20

      - name: Get Quality Gate status
        id: qg
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=myreactproject" \
            | jq -r '.projectStatus.status')
          echo "status=$STATUS" >> $GITHUB_OUTPUT

      - name: Comment on PR with Quality Gate result
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          header: SonarQube Quality Gate Result
          message: |
            **SonarQube Quality Gate:** ${{ steps.qg.outputs.status }}

      - name: Fail if Quality Gate failed
        if: steps.qg.outputs.status != 'OK'
        run: exit 1
